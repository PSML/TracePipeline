;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_cprintf
	.export		_a8
	.export		_b8
	.export		_c8
	.export		_ua8
	.export		_ub8
	.export		_uc8
	.export		_a32
	.export		_b32
	.export		_c32
	.export		_ua32
	.export		_ub32
	.export		_uc32
	.export		_uint32_loop
	.export		_int8_add
	.export		_int8_sub
	.export		_uint8_add
	.export		_uint8_sub
	.export		_uint8_mult3
	.export		_int32_add
	.export		_int32_sub
	.export		_uint32_add
	.export		_uint32_sub
	.export		_uint32_div2
	.export		_main

.segment	"DATA"

_a8:
	.byte	$FF
_b8:
	.byte	$01
_ua8:
	.byte	$FF
_ub8:
	.byte	$01
_a32:
	.dword	$00003333
_b32:
	.dword	$00004444
_ua32:
	.dword	$00003333
_ub32:
	.dword	$00004444

.segment	"RODATA"

L0013:
	.byte	$75,$69,$6E,$74,$33,$32,$5F,$6C,$6F,$6F,$70,$3A,$20,$75,$61,$3D
	.byte	$30,$78,$25,$6C,$78,$20,$28,$25,$6C,$64,$29,$0A,$00

.segment	"BSS"

_c8:
	.res	1,$00
_uc8:
	.res	1,$00
_c32:
	.res	4,$00
_uc32:
	.res	4,$00

; ---------------------------------------------------------------
; void __near__ uint32_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint32_loop: near

.segment	"CODE"

	ldx     #$00
	lda     #$01
	sta     _ua32
	stx     _ua32+1
	stx     _ua32+2
	stx     _ua32+3
L000A:	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	lda     _ua32
	cmp     #$02
	lda     _ua32+1
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L000B
	lda     #<(L0013)
	ldx     #>(L0013)
	jsr     pushax
	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     pusheax
	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     pusheax
	ldy     #$0A
	jsr     _cprintf
	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	sta     _ua32
	stx     _ua32+1
	ldy     sreg
	sty     _ua32+2
	ldy     sreg+1
	sty     _ua32+3
	jsr     resteax
	jmp     L000A
L000B:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ int8_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_int8_add: near

.segment	"CODE"

	ldx     #$00
	lda     _a8
	bpl     L001A
	dex
L001A:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _b8
	bpl     L001B
	dex
L001B:	clc
	adc     ptr1
	sta     _c8
	txa
	adc     ptr1+1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ int8_sub (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_int8_sub: near

.segment	"CODE"

	ldx     #$00
	lda     _a8
	bpl     L001F
	dex
L001F:	jsr     pushax
	ldx     #$00
	lda     _b8
	bpl     L0020
	dex
L0020:	jsr     tossubax
	sta     _c8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint8_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint8_add: near

.segment	"CODE"

	lda     _ua8
	clc
	adc     _ub8
	sta     _uc8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint8_sub (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint8_sub: near

.segment	"CODE"

	lda     _ua8
	sec
	sbc     _ub8
	sta     _uc8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint8_mult3 (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint8_mult3: near

.segment	"CODE"

	ldx     #$00
	lda     _ua8
	jsr     mulax3
	ldy     #$00
	sta     _uc32
	stx     _uc32+1
	sty     _uc32+2
	sty     _uc32+3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ int32_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_int32_add: near

.segment	"CODE"

	lda     _a32+3
	sta     sreg+1
	lda     _a32+2
	sta     sreg
	ldx     _a32+1
	lda     _a32
	jsr     pusheax
	lda     _b32+3
	sta     sreg+1
	lda     _b32+2
	sta     sreg
	ldx     _b32+1
	lda     _b32
	jsr     tosaddeax
	sta     _c32
	stx     _c32+1
	ldy     sreg
	sty     _c32+2
	ldy     sreg+1
	sty     _c32+3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ int32_sub (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_int32_sub: near

.segment	"CODE"

	lda     _a32+3
	sta     sreg+1
	lda     _a32+2
	sta     sreg
	ldx     _a32+1
	lda     _a32
	jsr     pusheax
	lda     _b32+3
	sta     sreg+1
	lda     _b32+2
	sta     sreg
	ldx     _b32+1
	lda     _b32
	jsr     tossubeax
	sta     _c32
	stx     _c32+1
	ldy     sreg
	sty     _c32+2
	ldy     sreg+1
	sty     _c32+3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint32_add (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint32_add: near

.segment	"CODE"

	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     pusheax
	lda     _ub32+3
	sta     sreg+1
	lda     _ub32+2
	sta     sreg
	ldx     _ub32+1
	lda     _ub32
	jsr     tosaddeax
	sta     _uc32
	stx     _uc32+1
	ldy     sreg
	sty     _uc32+2
	ldy     sreg+1
	sty     _uc32+3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint32_sub (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint32_sub: near

.segment	"CODE"

	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     pusheax
	lda     _ub32+3
	sta     sreg+1
	lda     _ub32+2
	sta     sreg
	ldx     _ub32+1
	lda     _ub32
	jsr     tossubeax
	sta     _uc32
	stx     _uc32+1
	ldy     sreg
	sty     _uc32+2
	ldy     sreg+1
	sty     _uc32+3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ uint32_div2 (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uint32_div2: near

.segment	"CODE"

	lda     _ua32+3
	sta     sreg+1
	lda     _ua32+2
	sta     sreg
	ldx     _ua32+1
	lda     _ua32
	jsr     shreax1
	sta     _uc32
	stx     _uc32+1
	ldy     sreg
	sty     _uc32+2
	ldy     sreg+1
	sty     _uc32+3
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _uint32_loop
	ldx     #$00
	txa
	rts

.endproc

