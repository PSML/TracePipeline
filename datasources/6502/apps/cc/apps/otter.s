;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_nodes
	.export		_potential
	.export		_main

.segment	"BSS"

_nodes:
	.res	6672,$00

; ---------------------------------------------------------------
; long __near__ potential (long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_potential: near

.segment	"CODE"

	jsr     decsp4
	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
L0003:	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$0D
	jsr     toslteax
	beq     L0004
	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jmp     L0003
L0004:	jsr     ldeax0sp
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; long __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldy     #$0A
	jsr     subysp
	ldy     #$06
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
L000D:	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$04
	lda     #$00
	sta     sreg
	sta     sreg+1
	lda     #$57
	jsr     toslteax
	beq     L000E
	ldy     #$09
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_nodes)
	tay
	txa
	adc     #>(_nodes)
	tax
	tya
	jsr     pushax
	ldy     #$0B
	jsr     ldeaxysp
	ldy     #$00
	jsr     steaxspidx
	ldy     #$09
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_nodes)
	tay
	txa
	adc     #>(_nodes)
	tax
	tya
	jsr     pushax
	ldy     #$0B
	jsr     ldeaxysp
	ldy     #$01
	jsr     inceaxy
	jsr     mulax6
	clc
	adc     #<(_nodes)
	tay
	txa
	adc     #>(_nodes)
	tax
	tya
	ldy     #$04
	jsr     staxspidx
	ldy     #$09
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$06
	jsr     steaxysp
	jsr     resteax
	jmp     L000D
L000E:	ldy     #$09
	jsr     ldeaxysp
	sta     _nodes+6666
	stx     _nodes+6666+1
	ldy     sreg
	sty     _nodes+6666+2
	ldy     sreg+1
	sty     _nodes+6666+3
	lda     #$00
	sta     _nodes+6670
	sta     _nodes+6670+1
	lda     #<(_nodes)
	ldx     #>(_nodes)
L0033:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	dey
	ora     (sp),y
	beq     L0023
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     ldeaxi
	jsr     pusheax
	jsr     _potential
	ldy     #$02
	jsr     steaxysp
	ldy     #$05
	jsr     ldeaxysp
	lda     sreg+1
	asl     a
	bcs     L0023
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jmp     L0033
L0023:	ldy     #$05
	jsr     ldeaxysp
	ldy     #$0A
	jmp     addysp

.endproc

